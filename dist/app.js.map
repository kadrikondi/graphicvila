{"version":3,"sources":["../server/app.js"],"names":["express","require","app","bodyParser","mongoose","cors","routes","path","use","json","urlencoded","extended","static","join","__dirname","process","env","NODE_ENV","get","req","res","sendfile","sendFile","port","PORT","listen","connect","useNewUrlParser","then","console","log","catch","err","useUnifiedTopology","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMF,SAAZ;AACA,IAAMG,aAAaF,QAAQ,aAAR,CAAnB;AACA,IAAMG,WAAWH,QAAQ,UAAR,CAAjB;AACA,IAAMI,OAAOJ,QAAQ,MAAR,CAAb;AACA,IAAMK,SAASL,QAAQ,gBAAR,CAAf;;AAEA,IAAMM,OAAON,QAAQ,MAAR,CAAb;;AAEAC,IAAIM,GAAJ,CAAQH,MAAR;AACAH,IAAIM,GAAJ,CAAQL,WAAWM,IAAX,EAAR;AACAP,IAAIM,GAAJ,CAAQL,WAAWO,UAAX,CAAsB;AAC1BC,cAAU;AADgB,CAAtB,CAAR;AAGA;AACAT,IAAIM,GAAJ,CAAQR,QAAQY,MAAR,CAAeL,KAAKM,IAAL,CAAUC,SAAV,EAAqB,cAArB,CAAf,CAAR;AACA;AACA,IAAGC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA5B,EAA0C;AAAGf,QAAIM,GAAJ,CAAQR,QAAQY,MAAR,CAAeL,KAAKM,IAAL,CAAUC,SAAV,EAAqB,cAArB,CAAf,CAAR;AAC3CZ,QAAIgB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAKA,YAAIC,QAAJ,CAAad,KAAKM,IAAL,CAAUC,YAAY,yBAAtB,CAAb;AAAkE,KAAlG;AAAoG;;AAEpG;AACAZ,IAAIgB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAGA,QAAIE,QAAJ,CAAaf,KAAKM,IAAL,CAAUC,YAAU,2BAApB,CAAb;AAAgE,CAA9F;AACFZ,IAAIM,GAAJ,CAAQ,GAAR,EAAaF,MAAb;AACA,IAAMiB,OAAO,QAAQR,QAAQC,GAAR,CAAYQ,IAAjC;;AAEAtB,IAAIuB,MAAJ,CAAWF,IAAX,EAAiB,YAAM;;AAGnB,QAAIR,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCb,iBAASsB,OAAT,CAAiB,iGAAjB,EAAoH;AAC5GC,6BAAiB;AAD2F,SAApH,EAGKC,IAHL,CAGU,YAAM;;AAERC,oBAAQC,GAAR,CAAY,0BAAZ;AACH,SANL,EAOKC,KAPL,CAOW,UAACC,GAAD,EAAS;AACZH,oBAAQC,GAAR,CAAYE,GAAZ;AACH,SATL;AAUH,KAXD,MAWO;AACJ5B,iBAASsB,OAAT,CAAiB,uCAAjB,EAA0D;AACtDC,6BAAiB,IADqC;AAEtDM,gCAAoB;AAFkC,SAA1D,EAGGL,IAHH,CAGQ,YAAM;;AAELC,oBAAQC,GAAR,CAAY,2BAAZ;AACH,SANN,EAOMC,KAPN,CAOY,UAACC,GAAD,EAAS;AACZH,oBAAQC,GAAR,CAAYE,GAAZ;AACH,SATN;AAWF;AACDH,YAAQC,GAAR,gCAAyCP,IAAzC;AACH,CA5BD;;AAgCAW,OAAOC,OAAP,GAAiBjC,GAAjB","file":"app.js","sourcesContent":["const express = require('express')\r\nconst app = express()\r\nconst bodyParser = require('body-parser')\r\nconst mongoose = require('mongoose')\r\nconst cors = require('cors')\r\nconst routes = require('./routes/index')\r\n\r\nconst path = require('path');\r\n\r\napp.use(cors())\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.urlencoded({\r\n    extended: true\r\n}))\r\n//static decl\r\napp.use(express.static(path.join(__dirname, 'client/build')));\r\n//production mode\r\nif(process.env.NODE_ENV === 'production') {  app.use(express.static(path.join(__dirname, 'client/build')));  \r\n  app.get('*', (req, res) => {    res.sendfile(path.join(__dirname = 'client/build/index.html'));  })}\r\n\r\n  //build mode\r\n  app.get('*', (req, res) => {  res.sendFile(path.join(__dirname+'/client/public/index.html'));})\r\napp.use('/', routes)\r\nconst port = 3001 || process.env.PORT\r\n\r\napp.listen(port, () => {\r\n\r\n\r\n    if (process.env.NODE_ENV === 'production') {\r\n        mongoose.connect('mongodb+srv://yakubebank:kadzee222.@cluster0-opegc.mongodb.net/test?retryWrites=true&w=majority', {\r\n                useNewUrlParser: true\r\n            })\r\n            .then(() => {\r\n\r\n                console.log(\"mongodb connected online\")\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    } else {\r\n       mongoose.connect('mongodb://localhost:27017/Graphicvila', {\r\n           useNewUrlParser: true,\r\n           useUnifiedTopology: true\r\n       }).then(() => {\r\n\r\n                console.log(\"mongodb connected offline\")\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n    console.log(`Server spinned up on port ${port}`)\r\n})\r\n\r\n\r\n\r\nmodule.exports = app;\r\n"]}
