{"version":3,"sources":["../../server/service/user.js"],"names":["User","require","bcrypt","jwt","config","UserService","find","sort","info","length","data","create","email","password","findOne","user","passwordIsvalid","compareSync","sign","id","name","UserSecret","token","_id","combined","findById","populate","user_graphics_details","graphics","combined_info","findOneAndDelete","file","gender","address","phone","photo","save","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,OAAOC,QAAQ,gBAAR,CAAb;AACA,IAAMC,SAASD,QAAQ,UAAR,CAAf;AACA,IAAME,MAAMF,QAAQ,cAAR,CAAZ;AACA,IAAMG,SAASH,QAAQ,kBAAR,CAAf;;IAEMI,W;;;;;;;;;;;;;;;;uCAIyBL,KAAKM,IAAL,GAAYC,IAAZ,CAAiB;AAChC,2CAAO,CAAC;AADwB,iCAAjB,C;;;AAAbC,oC;;sCAGFA,KAAKC,MAAL,GAAc,C;;;;;iEACPD,I;;;iEAEJ,I;;;;;;;;;;;;;;;;;;;;;;;;kGAMWE,I;;;;;;;uCAELV,KAAKW,MAAL,CAAYD,IAAZ,C;;;;;;;;;;;;;;;;;;;;;;;;;;;kGAMEE,K,EAAOC,Q;;;;;;;;uCAEHb,KAAKc,OAAL,CAAa;AAC5BF,2CAAOA;AADqB,iCAAb,C;;;AAAbG,oC;;oCAGDA,I;;;;;kEACM,I;;;AAGDC,+C,GAAkBd,OAAOe,WAAP,CAAmBJ,QAAnB,EAA6BE,KAAKF,QAAlC,C;;oCACnBG,e;;;;;kEACM,I;;;;uCAEab,IAAIe,IAAJ,CAAS;AACzBC,wCAAIJ,KAAKI,EADgB;AAEzBC,0CAAML,KAAKK,IAFc;AAGzBR,2CAAOG,KAAKH;AAHa,iCAAT,EAIjBR,OAAOiB,UAJU,C;;;AAAdC,qC;AAKAH,kC,GAAKJ,KAAKQ,G;AACVC,wC,GAAW,CAACF,KAAD,EAAQH,EAAR,C;kEACVK,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGAQIL,E;;;;;;;;uCAEAnB,KAAKyB,QAAL,CAAcN,EAAd,EAAkBO,QAAlB,CAA2B,UAA3B,C;;;AAAblB,oC;AACAmB,qD,GAAwBnB,KAAKoB,Q;AAC7BC,6C,GAAgB,CAACrB,IAAD,EAAOmB,qBAAP,C;kEACfE,a;;;;;;;;;;;;;;;;;;;;;;;;kGAMSV,E;;;;;;;;uCAEGnB,KAAK8B,gBAAL,CAAsB;AACrCP,yCAAKJ;AADgC,iCAAtB,C;;;AAAbX,oC;;qCAGFA,I;;;;;kEACOA,I;;;kEAEJ,I;;;;;;;;;;;;;;;;;;;;;;;;kGAMSW,E,EAAIT,I,EAAMqB,I;;;;;;;;uCAEP/B,KAAKc,OAAL,CAAa;AAC5BS,yCAAKJ;AADuB,iCAAb,C;;;AAAbX,oC;;qCAGFA,I;;;;;AAEIY,oC,GAKAV,I,CALAU,I,EACAR,K,GAIAF,I,CAJAE,K,EACAoB,M,GAGAtB,I,CAHAsB,M,EACAC,O,GAEAvB,I,CAFAuB,O,EACAC,K,GACAxB,I,CADAwB,K;;AAEJ1B,qCAAKY,IAAL,GAAYA,QAAQZ,KAAKY,IAAzB;AACAZ,qCAAKI,KAAL,GAAaA,SAASJ,KAAKI,KAA3B;AACAJ,qCAAKwB,MAAL,GAAcA,UAAUxB,KAAKwB,MAA7B;AACAxB,qCAAKyB,OAAL,GAAeA,WAAWzB,KAAKyB,OAA/B;AACAzB,qCAAK0B,KAAL,GAAaA,SAAS1B,KAAK0B,KAA3B;AACA1B,qCAAK2B,KAAL,GAAaJ,QAAQvB,KAAK2B,KAA1B;;uCACM3B,KAAK4B,IAAL,E;;;kEACC5B,I;;;kEAEJ,I;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnB6B,OAAOC,OAAP,GAAiBjC,WAAjB","file":"user.js","sourcesContent":["const User = require('../models/user')\r\nconst bcrypt = require('bcryptjs')\r\nconst jwt = require('jsonwebtoken')\r\nconst config = require('../config/config')\r\n\r\nclass UserService {\r\n\r\n    static async getAllUsers() {\r\n        try {\r\n            const info = await User.find().sort({\r\n                \"_id\": -1\r\n            })\r\n            if (info.length > 0) {\r\n                return info\r\n            }\r\n            return null\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async registerUser(data) {\r\n        try {\r\n            return await User.create(data)\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async loginUser(email, password) {\r\n        try {\r\n            const user = await User.findOne({\r\n                email: email\r\n            })\r\n            if (!user) {\r\n                return null\r\n            } else {\r\n\r\n                const passwordIsvalid = bcrypt.compareSync(password, user.password)\r\n                if (!passwordIsvalid) {\r\n                    return null\r\n                } else {\r\n                    const token = await jwt.sign({\r\n                        id: user.id,\r\n                        name: user.name,\r\n                        email: user.email\r\n                    }, config.UserSecret)\r\n                    const id = user._id\r\n                    const combined = [token, id]\r\n                    return combined\r\n                }\r\n            }\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async getSingleUser(id) {\r\n        try {\r\n            const info = await User.findById(id).populate(\"graphics\")\r\n            const user_graphics_details = info.graphics\r\n            const combined_info = [info, user_graphics_details]\r\n            return combined_info\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async deleteUser(id) {\r\n        try {\r\n            const info = await User.findOneAndDelete({\r\n                _id: id\r\n            })\r\n            if (info) {\r\n                return info\r\n            }\r\n            return null\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async updateUser(id, data, file) {\r\n        try {\r\n            const info = await User.findOne({\r\n                _id: id\r\n            })\r\n            if (info) {\r\n                const {\r\n                    name,\r\n                    email,\r\n                    gender,\r\n                    address,\r\n                    phone\r\n                } = data\r\n                info.name = name || info.name\r\n                info.email = email || info.email\r\n                info.gender = gender || info.gender\r\n                info.address = address || info.address\r\n                info.phone = phone || info.phone\r\n                info.photo = file || info.photo\r\n                await info.save()\r\n                return info\r\n            }\r\n            return null\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = UserService;"]}