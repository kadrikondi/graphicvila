{"version":3,"sources":["../../server/service/graphics.js"],"names":["Graphic","require","User","GraphicService","find","sort","info","id","data","file","findOne","_id","err","user","create","graphic","graphical","graphics","photo","save","push","caption","ideaname","name","findOneAndDelete","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,UAAUC,QAAQ,mBAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,gBAAR,CAAb;;IAEME,c;;;;;;;;;;;;;;;;uCAIyBH,QAAQI,IAAR,GAAeC,IAAf,CAAoB,EAAC,OAAO,CAAC,CAAT,EAApB,C;;;AAAbC,oC;iEACCA,I;;;;;;;;;;;;;;;;;;;;;;;;kGAMkBC,E,EAAIC,I,EAAMC,I;;;;;;;;;uCAE7BP,KAAKQ,OAAL,CAAa,EAACC,KAAKJ,EAAN,EAAb;AAAA,wGAAwB,kBAAOK,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DACpBb,QAAQc,MAAR,CAAeN,IAAf;AAAA,gIAAqB,kBAAOI,GAAP,EAAYG,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,yFADiB,GACLH,KAAKI,QADA;;AAEvBF,wFAAQG,KAAR,GAAgBT,IAAhB;AAFuB;AAAA,uFAGjBM,QAAQI,IAAR,EAHiB;;AAAA;AAIvBH,0FAAUI,IAAV,CAAeL,OAAf;AAJuB;AAAA,uFAKjBF,KAAKM,IAAL,EALiB;;AAAA;AAAA,kHAMhBJ,OANgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAArB;;AAAA;AAAA;AAAA;AAAA,4DADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAxB;;AAAA;AAAA;AAAA;AAAA,oC;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGAegBR,E;;;;;;;uCAETP,QAAQU,OAAR,CAAgB,EAACC,KAAKJ,EAAN,EAAhB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;kGAMMA,E,EAAIC,I;;;;;;;;uCAEJR,QAAQU,OAAR,CAAgB,EAACC,KAAKJ,EAAN,EAAhB,C;;;AAAbD,oC;;qCACHA,I;;;;;AACSe,uC,GAA4Bb,I,CAA5Ba,O,EAASC,Q,GAAmBd,I,CAAnBc,Q,EAAUC,I,GAASf,I,CAATe,I;;AAC3BjB,qCAAKe,OAAL,GAAeA,WAAWf,KAAKe,OAA/B;AACAf,qCAAKgB,QAAL,GAAgBA,YAAYhB,KAAKgB,QAAjC;AACAhB,qCAAKiB,IAAL,GAAYA,QAAQjB,KAAKiB,IAAzB;;uCACMjB,KAAKa,IAAL,E;;;kEACCb,I;;;kEAEJ,I;;;;;;;;;;;;;;;;;;;;;;;;kGAMYC,E;;;;;;;uCAENP,QAAQwB,gBAAR,CAAyB,EAACb,KAAKJ,EAAN,EAAzB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOzBkB,OAAOC,OAAP,GAAiBvB,cAAjB","file":"graphics.js","sourcesContent":["const Graphic = require('../models/graphic')\r\nconst User = require('../models/user')\r\n\r\nclass GraphicService {\r\n\r\n    static async getAllGraphics() {\r\n        try {\r\n            const info = await Graphic.find().sort({\"_id\": -1})\r\n            return info\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async userPostNewGraphics(id, data, file) {\r\n        try {\r\n            await User.findOne({_id: id}, async (err, user) => {\r\n                await Graphic.create(data, async (err, graphic) => {\r\n                    const graphical = user.graphics\r\n                    graphic.photo = file\r\n                    await graphic.save()\r\n                    graphical.push(graphic)\r\n                    await user.save()\r\n                    return graphic\r\n                })\r\n            })\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async getSingleGraphic(id) {\r\n        try {\r\n            return await Graphic.findOne({_id: id})\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async updateGraphic(id, data) {\r\n        try {\r\n            const info = await Graphic.findOne({_id: id})\r\n            if(info) {\r\n                const { caption, ideaname, name } = data\r\n                info.caption = caption || info.caption\r\n                info.ideaname = ideaname || info.ideaname\r\n                info.name = name || info.name\r\n                await info.save()\r\n                return info\r\n            }\r\n            return null\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async deleteGraphic(id) {\r\n        try {\r\n            return await Graphic.findOneAndDelete({_id: id})\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = GraphicService;\r\n"]}